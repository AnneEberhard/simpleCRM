VERSION VON CHATGPT
async saveUserChatGPT() {
    this.loading = true;
    if (this.birthDate) {
      this.user.birthDate = this.birthDate.getTime();
    }
  
    let docRef = this.getUsersRef();
  
    try {
      await addDoc(docRef, this.user.toJSON());
      console.log('user uploaded')
    } catch (err) {
      console.error(err);
    } finally {
      console.log('anyways')
      this.loading = false;
    }
  }

ERGIBT FEHLER; VERMUTLICH WEGEN : User
    setNoteObject(obj: any, id: string): User {
    return {
      firstName: obj.firstName || '',
      lastName: obj.lastName|| '',
      birthDate: obj.birthDate || '',
      address: obj.address || '',
      zipCode: obj.zipCode || '',
      city: obj.city || '',
      email: obj.email || ''
    }}

      subUserList() {
    const q = query(this.getUsersRef(), limit(100));
    return onSnapshot(q, (list) => {
      this.userList = [];
      list.forEach(element => {
        console.log(element);
        this.userList.push((element.data().toJSON()));
        console.log(this.userList, element.id);
      }
      )
    })
  }

DIREKT IN HTML EINGEBAUT
    closeDialog() {
    this.dialogRef.close();
  }

OHNE ID FUNTKIONIERT
  subUserList() {
    const q = query(this.getUsersRef(), limit(100));
    return onSnapshot(q, (list) => {
      this.userList = [];
      list.forEach(element => {
        this.userList.push((element.data()));
      }
      )
    })
  }

  CHATGPT LÖSUNG
    ngOnInit(): void {
    this.route.url.subscribe(segments => {
      const lastSegment = segments[segments.length - 1];
      this.activeId = lastSegment.toString();
      console.log('activeId:', this.activeId);
    });}

    aADAPTED SOLUTON; CAUSES PROBLEMS WITH THIS:ACTIVE ID    this.route.paramMap.subscribe(paramMap => {
      this.activeId = paramMap.get('id').toString();
      console.log('activeId:', this.activeId);
    });

    VERSUCH; FETCH AUSZULAGERN
      ngOnInit(): void {
    this.route.url.subscribe(segments => {
      const lastSegment = segments[segments.length - 1];
      this.activeId = lastSegment.toString();
      console.log('activeId:', this.activeId);
    });
  
    this.firebaseservice.fetchSingleUser(this.activeId)
      .then(user => {
        this.activeUser = user;
        console.log(this.activeUser);
      })
      .catch(error => {
        console.error(error);
    });
  }

    getCleanJSON(obj: User) { //um mein JSON aufzuräumen für bestimmte Funktionen
    return {
      firstName: obj.firstName || '',
      lastName: obj.lastName|| '',
      birthDate: obj.birthDate || '',
      address: obj.address || '',
      zipCode: obj.zipCode || '',
      city: obj.city || '',
      email: obj.email || ''
    }
  }

  <div class="dialogContainer">
<mat-progress-bar *ngIf="loading" mode="indeterminate"></mat-progress-bar>
<h1 mat-dialog-title>Add User</h1>
<div mat-dialog-content>
  <div class="addUserDialog">
    <mat-form-field appearance="outline" class="marginRight16 marginTop32">
      <mat-label>First Name</mat-label>
      <input [disabled]="loading" matInput placeholder="First Name" formControlName="firstName" />
    </mat-form-field>
    <mat-form-field appearance="outline" class="marginTop32">
      <mat-label>Last Name</mat-label>
      <input [disabled]="loading" [(ngModel)]="user.lastName" matInput placeholder="Last Name" />
    </mat-form-field>
  </div>
  <div class="addUserDialog">
    <mat-form-field appearance="outline" class="width100">
      <mat-label>Email</mat-label>
      <input type="email" [disabled]="loading" [(ngModel)]="user.email" matInput placeholder="Email" />
    </mat-form-field>
  </div>
  <div>
    <mat-form-field appearance="outline" class="width100">
      <mat-label>Birth Date</mat-label>
      <input [disabled]="loading" [(ngModel)]="this.birthDate" matInput [matDatepicker]="picker">
      <!--mat-hint>MM/DD/YYYY</mat-hint-->
      <mat-datepicker-toggle matIconSuffix [for]="picker"></mat-datepicker-toggle>
      <mat-datepicker #picker></mat-datepicker>
    </mat-form-field>
  </div>
  <div class="addUserDialog">
    <mat-form-field appearance="outline" class="width100">
      <mat-label>Address</mat-label>
      <input [disabled]="loading" [(ngModel)]="user.address" matInput placeholder="Placeholder" />
      <!--mat-hint>Please enter a name</mat-hint-->
    </mat-form-field>
  </div>
  <div class="addUserDialog">
    <mat-form-field appearance="outline" class="marginRight16">
      <mat-label>Zip Code</mat-label>
      <input [disabled]="loading" [(ngModel)]="user.zipCode" matInput placeholder="Zip Code" />
      <!--mat-hint>Please enter a name</mat-hint-->
    </mat-form-field>
    <mat-form-field appearance="outline">
      <mat-label>City</mat-label>
      <input [disabled]="loading" [(ngModel)]="user.city" matInput placeholder="City" />
      <!--mat-hint>Please enter a name</mat-hint-->
    </mat-form-field>
  </div>
</div>
<div mat-dialog-actions>
  <button mat-button [disabled]="loading" (click)="this.dialogRef.close()">Cancel</button>
  <button mat-button [disabled]="loading" (click)="saveUser()" cdkFocusInitial>Save</button>
</div>
</div>